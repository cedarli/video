# Makefile.in generated by automake 1.9.6 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = .

pkgdatadir = $(datadir)/mediainfo-gui
pkglibdir = $(libdir)/mediainfo-gui
pkgincludedir = $(includedir)/mediainfo-gui
top_builddir = .
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = mediainfo-gui$(EXEEXT)
DIST_COMMON = $(am__configure_deps) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(top_srcdir)/configure config.guess \
	config.sub depcomp install-sh ltmain.sh missing
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/wxwin.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno configure.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_mediainfo_gui_OBJECTS = GUI_Main_Common_Core.$(OBJEXT) \
	GUI_Main_Easy_Box_Core.$(OBJEXT) GUI_Main_Easy_Core.$(OBJEXT) \
	App.$(OBJEXT) GUI_Main.$(OBJEXT) GUI_Main_Easy.$(OBJEXT) \
	GUI_Main_Easy_Box.$(OBJEXT) GUI_Main_FileDrop.$(OBJEXT) \
	GUI_Main_HTML.$(OBJEXT) GUI_Main_Menu.$(OBJEXT) \
	GUI_Main_Sheet.$(OBJEXT) GUI_Main_Text.$(OBJEXT) \
	GUI_Main_Tree.$(OBJEXT) CommandLine_Parser.$(OBJEXT) \
	Help.$(OBJEXT) Core.$(OBJEXT)
mediainfo_gui_OBJECTS = $(am_mediainfo_gui_OBJECTS)
mediainfo_gui_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I. -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(mediainfo_gui_SOURCES)
DIST_SOURCES = $(mediainfo_gui_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d $(distdir) \
    || { find $(distdir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(distdir); }; }
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /home/cedar/.cedar/local/video/mediainfo/MediaInfo/Project/GNU/GUI/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/cedar/.cedar/local/video/mediainfo/MediaInfo/Project/GNU/GUI/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/cedar/.cedar/local/video/mediainfo/MediaInfo/Project/GNU/GUI/missing --run autoconf
AUTOHEADER = ${SHELL} /home/cedar/.cedar/local/video/mediainfo/MediaInfo/Project/GNU/GUI/missing --run autoheader
AUTOMAKE = ${SHELL} /home/cedar/.cedar/local/video/mediainfo/MediaInfo/Project/GNU/GUI/missing --run automake-1.9
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS =  -I/usr/lib/x86_64-linux-gnu/wx/include/gtk2-unicode-release-2.8 -I/usr/include/wx-2.8 -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES -D__WXGTK__ -pthread -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  -I/usr/lib/x86_64-linux-gnu/wx/include/gtk2-unicode-release-2.8 -I/usr/include/wx-2.8 -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES -D__WXGTK__ -pthread -O2 -DUNICODE -DUNICODE -DSIZE_T_IS_LONG
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"\" -DPACKAGE_TARNAME=\"\" -DPACKAGE_VERSION=\"\" -DPACKAGE_STRING=\"\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE=\"mediainfo-gui\" -DVERSION=\"0\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DUNICODE=1 
DEPDIR = .deps
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
F77 = 
FFLAGS = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS =  -L/usr/lib/x86_64-linux-gnu -pthread   -L/usr/lib/x86_64-linux-gnu   -lwx_gtk2u_richtext-2.8 -lwx_gtk2u_aui-2.8 -lwx_gtk2u_xrc-2.8 -lwx_gtk2u_qa-2.8 -lwx_gtk2u_html-2.8 -lwx_gtk2u_adv-2.8 -lwx_gtk2u_core-2.8 -lwx_baseu_xml-2.8 -lwx_baseu_net-2.8 -lwx_baseu-2.8  -L/home/cedar/.cedar/local/video/mediainfo/MediaInfoLib/Project/GNU/Library -lmediainfo -lz -L/home/cedar/.cedar/local/video/mediainfo/ZenLib/Project/GNU/Library -lzen -lpthread -lstdc++ -L/home/cedar/.cedar/local/video/mediainfo/ZenLib/Project/GNU/Library -lzen -lpthread -lstdc++
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/cedar/.cedar/local/video/mediainfo/MediaInfo/Project/GNU/GUI/missing --run makeinfo
OBJEXT = o
PACKAGE = mediainfo-gui
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 0
WX_CFLAGS = -I/usr/lib/x86_64-linux-gnu/wx/include/gtk2-unicode-release-2.8 -I/usr/include/wx-2.8 -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES -D__WXGTK__ -DwxUSE_GUI=0 -pthread
WX_CFLAGS_ONLY = -pthread
WX_CONFIG_PATH = /usr/bin/wx-config
WX_CPPFLAGS = -I/usr/lib/x86_64-linux-gnu/wx/include/gtk2-unicode-release-2.8 -I/usr/include/wx-2.8 -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES -D__WXGTK__ -DwxUSE_GUI=0
WX_CXXFLAGS = -I/usr/lib/x86_64-linux-gnu/wx/include/gtk2-unicode-release-2.8 -I/usr/include/wx-2.8 -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES -D__WXGTK__ -DwxUSE_GUI=0 -pthread
WX_CXXFLAGS_ONLY = 
WX_LIBS = -L/usr/lib/x86_64-linux-gnu -pthread   -L/usr/lib/x86_64-linux-gnu   -lwx_baseu-2.8 
WX_LIBS_STATIC = -L/usr/lib/x86_64-linux-gnu -pthread   -L/usr/lib/x86_64-linux-gnu   -lwx_baseu-2.8 
WX_RESCOMP = 
WX_VERSION = 2.8.12
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/cedar/.cedar/local/video/mediainfo/MediaInfo/Project/GNU/GUI/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
AUTOMAKE_OPTIONS = foreign
mediainfo_gui_SOURCES = \
    ../../../Source/GUI/Common/GUI_Main_Common_Core.cpp \
    ../../../Source/GUI/Common/GUI_Main_Easy_Box_Core.cpp \
    ../../../Source/GUI/Common/GUI_Main_Easy_Core.cpp \
    ../../../Source/GUI/WxWidgets/App.cpp \
    ../../../Source/GUI/WxWidgets/GUI_Main.cpp \
    ../../../Source/GUI/WxWidgets/GUI_Main.rc \
    ../../../Source/GUI/WxWidgets/GUI_Main_Easy.cpp \
    ../../../Source/GUI/WxWidgets/GUI_Main_Easy_Box.cpp \
    ../../../Source/GUI/WxWidgets/GUI_Main_FileDrop.cpp \
    ../../../Source/GUI/WxWidgets/GUI_Main_HTML.cpp \
    ../../../Source/GUI/WxWidgets/GUI_Main_Menu.cpp \
    ../../../Source/GUI/WxWidgets/GUI_Main_Sheet.cpp \
    ../../../Source/GUI/WxWidgets/GUI_Main_Text.cpp \
    ../../../Source/GUI/WxWidgets/GUI_Main_Tree.cpp \
    ../../../Source/CLI/CommandLine_Parser.cpp \
    ../../../Source/CLI/Help.cpp \
    ../../../Source/Common/Core.cpp


#mediainfo-gui_LDFLAGS     = -no-undefined -version-info 0:0:0
INCLUDES = -I../../../Source -I../../../../MediaInfoLib/Source -I../../../../ZenLib/Source
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
am--refresh:
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign '; \
	      cd $(srcdir) && $(AUTOMAKE) --foreign  \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
mediainfo-gui$(EXEEXT): $(mediainfo_gui_OBJECTS) $(mediainfo_gui_DEPENDENCIES) 
	@rm -f mediainfo-gui$(EXEEXT)
	$(CXXLINK) $(mediainfo_gui_LDFLAGS) $(mediainfo_gui_OBJECTS) $(mediainfo_gui_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/App.Po
include ./$(DEPDIR)/CommandLine_Parser.Po
include ./$(DEPDIR)/Core.Po
include ./$(DEPDIR)/GUI_Main.Po
include ./$(DEPDIR)/GUI_Main_Common_Core.Po
include ./$(DEPDIR)/GUI_Main_Easy.Po
include ./$(DEPDIR)/GUI_Main_Easy_Box.Po
include ./$(DEPDIR)/GUI_Main_Easy_Box_Core.Po
include ./$(DEPDIR)/GUI_Main_Easy_Core.Po
include ./$(DEPDIR)/GUI_Main_FileDrop.Po
include ./$(DEPDIR)/GUI_Main_HTML.Po
include ./$(DEPDIR)/GUI_Main_Menu.Po
include ./$(DEPDIR)/GUI_Main_Sheet.Po
include ./$(DEPDIR)/GUI_Main_Text.Po
include ./$(DEPDIR)/GUI_Main_Tree.Po
include ./$(DEPDIR)/Help.Po

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

GUI_Main_Common_Core.o: ../../../Source/GUI/Common/GUI_Main_Common_Core.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GUI_Main_Common_Core.o -MD -MP -MF "$(DEPDIR)/GUI_Main_Common_Core.Tpo" -c -o GUI_Main_Common_Core.o `test -f '../../../Source/GUI/Common/GUI_Main_Common_Core.cpp' || echo '$(srcdir)/'`../../../Source/GUI/Common/GUI_Main_Common_Core.cpp; \
	then mv -f "$(DEPDIR)/GUI_Main_Common_Core.Tpo" "$(DEPDIR)/GUI_Main_Common_Core.Po"; else rm -f "$(DEPDIR)/GUI_Main_Common_Core.Tpo"; exit 1; fi
#	source='../../../Source/GUI/Common/GUI_Main_Common_Core.cpp' object='GUI_Main_Common_Core.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GUI_Main_Common_Core.o `test -f '../../../Source/GUI/Common/GUI_Main_Common_Core.cpp' || echo '$(srcdir)/'`../../../Source/GUI/Common/GUI_Main_Common_Core.cpp

GUI_Main_Common_Core.obj: ../../../Source/GUI/Common/GUI_Main_Common_Core.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GUI_Main_Common_Core.obj -MD -MP -MF "$(DEPDIR)/GUI_Main_Common_Core.Tpo" -c -o GUI_Main_Common_Core.obj `if test -f '../../../Source/GUI/Common/GUI_Main_Common_Core.cpp'; then $(CYGPATH_W) '../../../Source/GUI/Common/GUI_Main_Common_Core.cpp'; else $(CYGPATH_W) '$(srcdir)/../../../Source/GUI/Common/GUI_Main_Common_Core.cpp'; fi`; \
	then mv -f "$(DEPDIR)/GUI_Main_Common_Core.Tpo" "$(DEPDIR)/GUI_Main_Common_Core.Po"; else rm -f "$(DEPDIR)/GUI_Main_Common_Core.Tpo"; exit 1; fi
#	source='../../../Source/GUI/Common/GUI_Main_Common_Core.cpp' object='GUI_Main_Common_Core.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GUI_Main_Common_Core.obj `if test -f '../../../Source/GUI/Common/GUI_Main_Common_Core.cpp'; then $(CYGPATH_W) '../../../Source/GUI/Common/GUI_Main_Common_Core.cpp'; else $(CYGPATH_W) '$(srcdir)/../../../Source/GUI/Common/GUI_Main_Common_Core.cpp'; fi`

GUI_Main_Easy_Box_Core.o: ../../../Source/GUI/Common/GUI_Main_Easy_Box_Core.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GUI_Main_Easy_Box_Core.o -MD -MP -MF "$(DEPDIR)/GUI_Main_Easy_Box_Core.Tpo" -c -o GUI_Main_Easy_Box_Core.o `test -f '../../../Source/GUI/Common/GUI_Main_Easy_Box_Core.cpp' || echo '$(srcdir)/'`../../../Source/GUI/Common/GUI_Main_Easy_Box_Core.cpp; \
	then mv -f "$(DEPDIR)/GUI_Main_Easy_Box_Core.Tpo" "$(DEPDIR)/GUI_Main_Easy_Box_Core.Po"; else rm -f "$(DEPDIR)/GUI_Main_Easy_Box_Core.Tpo"; exit 1; fi
#	source='../../../Source/GUI/Common/GUI_Main_Easy_Box_Core.cpp' object='GUI_Main_Easy_Box_Core.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GUI_Main_Easy_Box_Core.o `test -f '../../../Source/GUI/Common/GUI_Main_Easy_Box_Core.cpp' || echo '$(srcdir)/'`../../../Source/GUI/Common/GUI_Main_Easy_Box_Core.cpp

GUI_Main_Easy_Box_Core.obj: ../../../Source/GUI/Common/GUI_Main_Easy_Box_Core.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GUI_Main_Easy_Box_Core.obj -MD -MP -MF "$(DEPDIR)/GUI_Main_Easy_Box_Core.Tpo" -c -o GUI_Main_Easy_Box_Core.obj `if test -f '../../../Source/GUI/Common/GUI_Main_Easy_Box_Core.cpp'; then $(CYGPATH_W) '../../../Source/GUI/Common/GUI_Main_Easy_Box_Core.cpp'; else $(CYGPATH_W) '$(srcdir)/../../../Source/GUI/Common/GUI_Main_Easy_Box_Core.cpp'; fi`; \
	then mv -f "$(DEPDIR)/GUI_Main_Easy_Box_Core.Tpo" "$(DEPDIR)/GUI_Main_Easy_Box_Core.Po"; else rm -f "$(DEPDIR)/GUI_Main_Easy_Box_Core.Tpo"; exit 1; fi
#	source='../../../Source/GUI/Common/GUI_Main_Easy_Box_Core.cpp' object='GUI_Main_Easy_Box_Core.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GUI_Main_Easy_Box_Core.obj `if test -f '../../../Source/GUI/Common/GUI_Main_Easy_Box_Core.cpp'; then $(CYGPATH_W) '../../../Source/GUI/Common/GUI_Main_Easy_Box_Core.cpp'; else $(CYGPATH_W) '$(srcdir)/../../../Source/GUI/Common/GUI_Main_Easy_Box_Core.cpp'; fi`

GUI_Main_Easy_Core.o: ../../../Source/GUI/Common/GUI_Main_Easy_Core.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GUI_Main_Easy_Core.o -MD -MP -MF "$(DEPDIR)/GUI_Main_Easy_Core.Tpo" -c -o GUI_Main_Easy_Core.o `test -f '../../../Source/GUI/Common/GUI_Main_Easy_Core.cpp' || echo '$(srcdir)/'`../../../Source/GUI/Common/GUI_Main_Easy_Core.cpp; \
	then mv -f "$(DEPDIR)/GUI_Main_Easy_Core.Tpo" "$(DEPDIR)/GUI_Main_Easy_Core.Po"; else rm -f "$(DEPDIR)/GUI_Main_Easy_Core.Tpo"; exit 1; fi
#	source='../../../Source/GUI/Common/GUI_Main_Easy_Core.cpp' object='GUI_Main_Easy_Core.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GUI_Main_Easy_Core.o `test -f '../../../Source/GUI/Common/GUI_Main_Easy_Core.cpp' || echo '$(srcdir)/'`../../../Source/GUI/Common/GUI_Main_Easy_Core.cpp

GUI_Main_Easy_Core.obj: ../../../Source/GUI/Common/GUI_Main_Easy_Core.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GUI_Main_Easy_Core.obj -MD -MP -MF "$(DEPDIR)/GUI_Main_Easy_Core.Tpo" -c -o GUI_Main_Easy_Core.obj `if test -f '../../../Source/GUI/Common/GUI_Main_Easy_Core.cpp'; then $(CYGPATH_W) '../../../Source/GUI/Common/GUI_Main_Easy_Core.cpp'; else $(CYGPATH_W) '$(srcdir)/../../../Source/GUI/Common/GUI_Main_Easy_Core.cpp'; fi`; \
	then mv -f "$(DEPDIR)/GUI_Main_Easy_Core.Tpo" "$(DEPDIR)/GUI_Main_Easy_Core.Po"; else rm -f "$(DEPDIR)/GUI_Main_Easy_Core.Tpo"; exit 1; fi
#	source='../../../Source/GUI/Common/GUI_Main_Easy_Core.cpp' object='GUI_Main_Easy_Core.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GUI_Main_Easy_Core.obj `if test -f '../../../Source/GUI/Common/GUI_Main_Easy_Core.cpp'; then $(CYGPATH_W) '../../../Source/GUI/Common/GUI_Main_Easy_Core.cpp'; else $(CYGPATH_W) '$(srcdir)/../../../Source/GUI/Common/GUI_Main_Easy_Core.cpp'; fi`

App.o: ../../../Source/GUI/WxWidgets/App.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT App.o -MD -MP -MF "$(DEPDIR)/App.Tpo" -c -o App.o `test -f '../../../Source/GUI/WxWidgets/App.cpp' || echo '$(srcdir)/'`../../../Source/GUI/WxWidgets/App.cpp; \
	then mv -f "$(DEPDIR)/App.Tpo" "$(DEPDIR)/App.Po"; else rm -f "$(DEPDIR)/App.Tpo"; exit 1; fi
#	source='../../../Source/GUI/WxWidgets/App.cpp' object='App.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o App.o `test -f '../../../Source/GUI/WxWidgets/App.cpp' || echo '$(srcdir)/'`../../../Source/GUI/WxWidgets/App.cpp

App.obj: ../../../Source/GUI/WxWidgets/App.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT App.obj -MD -MP -MF "$(DEPDIR)/App.Tpo" -c -o App.obj `if test -f '../../../Source/GUI/WxWidgets/App.cpp'; then $(CYGPATH_W) '../../../Source/GUI/WxWidgets/App.cpp'; else $(CYGPATH_W) '$(srcdir)/../../../Source/GUI/WxWidgets/App.cpp'; fi`; \
	then mv -f "$(DEPDIR)/App.Tpo" "$(DEPDIR)/App.Po"; else rm -f "$(DEPDIR)/App.Tpo"; exit 1; fi
#	source='../../../Source/GUI/WxWidgets/App.cpp' object='App.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o App.obj `if test -f '../../../Source/GUI/WxWidgets/App.cpp'; then $(CYGPATH_W) '../../../Source/GUI/WxWidgets/App.cpp'; else $(CYGPATH_W) '$(srcdir)/../../../Source/GUI/WxWidgets/App.cpp'; fi`

GUI_Main.o: ../../../Source/GUI/WxWidgets/GUI_Main.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GUI_Main.o -MD -MP -MF "$(DEPDIR)/GUI_Main.Tpo" -c -o GUI_Main.o `test -f '../../../Source/GUI/WxWidgets/GUI_Main.cpp' || echo '$(srcdir)/'`../../../Source/GUI/WxWidgets/GUI_Main.cpp; \
	then mv -f "$(DEPDIR)/GUI_Main.Tpo" "$(DEPDIR)/GUI_Main.Po"; else rm -f "$(DEPDIR)/GUI_Main.Tpo"; exit 1; fi
#	source='../../../Source/GUI/WxWidgets/GUI_Main.cpp' object='GUI_Main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GUI_Main.o `test -f '../../../Source/GUI/WxWidgets/GUI_Main.cpp' || echo '$(srcdir)/'`../../../Source/GUI/WxWidgets/GUI_Main.cpp

GUI_Main.obj: ../../../Source/GUI/WxWidgets/GUI_Main.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GUI_Main.obj -MD -MP -MF "$(DEPDIR)/GUI_Main.Tpo" -c -o GUI_Main.obj `if test -f '../../../Source/GUI/WxWidgets/GUI_Main.cpp'; then $(CYGPATH_W) '../../../Source/GUI/WxWidgets/GUI_Main.cpp'; else $(CYGPATH_W) '$(srcdir)/../../../Source/GUI/WxWidgets/GUI_Main.cpp'; fi`; \
	then mv -f "$(DEPDIR)/GUI_Main.Tpo" "$(DEPDIR)/GUI_Main.Po"; else rm -f "$(DEPDIR)/GUI_Main.Tpo"; exit 1; fi
#	source='../../../Source/GUI/WxWidgets/GUI_Main.cpp' object='GUI_Main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GUI_Main.obj `if test -f '../../../Source/GUI/WxWidgets/GUI_Main.cpp'; then $(CYGPATH_W) '../../../Source/GUI/WxWidgets/GUI_Main.cpp'; else $(CYGPATH_W) '$(srcdir)/../../../Source/GUI/WxWidgets/GUI_Main.cpp'; fi`

GUI_Main_Easy.o: ../../../Source/GUI/WxWidgets/GUI_Main_Easy.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GUI_Main_Easy.o -MD -MP -MF "$(DEPDIR)/GUI_Main_Easy.Tpo" -c -o GUI_Main_Easy.o `test -f '../../../Source/GUI/WxWidgets/GUI_Main_Easy.cpp' || echo '$(srcdir)/'`../../../Source/GUI/WxWidgets/GUI_Main_Easy.cpp; \
	then mv -f "$(DEPDIR)/GUI_Main_Easy.Tpo" "$(DEPDIR)/GUI_Main_Easy.Po"; else rm -f "$(DEPDIR)/GUI_Main_Easy.Tpo"; exit 1; fi
#	source='../../../Source/GUI/WxWidgets/GUI_Main_Easy.cpp' object='GUI_Main_Easy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GUI_Main_Easy.o `test -f '../../../Source/GUI/WxWidgets/GUI_Main_Easy.cpp' || echo '$(srcdir)/'`../../../Source/GUI/WxWidgets/GUI_Main_Easy.cpp

GUI_Main_Easy.obj: ../../../Source/GUI/WxWidgets/GUI_Main_Easy.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GUI_Main_Easy.obj -MD -MP -MF "$(DEPDIR)/GUI_Main_Easy.Tpo" -c -o GUI_Main_Easy.obj `if test -f '../../../Source/GUI/WxWidgets/GUI_Main_Easy.cpp'; then $(CYGPATH_W) '../../../Source/GUI/WxWidgets/GUI_Main_Easy.cpp'; else $(CYGPATH_W) '$(srcdir)/../../../Source/GUI/WxWidgets/GUI_Main_Easy.cpp'; fi`; \
	then mv -f "$(DEPDIR)/GUI_Main_Easy.Tpo" "$(DEPDIR)/GUI_Main_Easy.Po"; else rm -f "$(DEPDIR)/GUI_Main_Easy.Tpo"; exit 1; fi
#	source='../../../Source/GUI/WxWidgets/GUI_Main_Easy.cpp' object='GUI_Main_Easy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GUI_Main_Easy.obj `if test -f '../../../Source/GUI/WxWidgets/GUI_Main_Easy.cpp'; then $(CYGPATH_W) '../../../Source/GUI/WxWidgets/GUI_Main_Easy.cpp'; else $(CYGPATH_W) '$(srcdir)/../../../Source/GUI/WxWidgets/GUI_Main_Easy.cpp'; fi`

GUI_Main_Easy_Box.o: ../../../Source/GUI/WxWidgets/GUI_Main_Easy_Box.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GUI_Main_Easy_Box.o -MD -MP -MF "$(DEPDIR)/GUI_Main_Easy_Box.Tpo" -c -o GUI_Main_Easy_Box.o `test -f '../../../Source/GUI/WxWidgets/GUI_Main_Easy_Box.cpp' || echo '$(srcdir)/'`../../../Source/GUI/WxWidgets/GUI_Main_Easy_Box.cpp; \
	then mv -f "$(DEPDIR)/GUI_Main_Easy_Box.Tpo" "$(DEPDIR)/GUI_Main_Easy_Box.Po"; else rm -f "$(DEPDIR)/GUI_Main_Easy_Box.Tpo"; exit 1; fi
#	source='../../../Source/GUI/WxWidgets/GUI_Main_Easy_Box.cpp' object='GUI_Main_Easy_Box.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GUI_Main_Easy_Box.o `test -f '../../../Source/GUI/WxWidgets/GUI_Main_Easy_Box.cpp' || echo '$(srcdir)/'`../../../Source/GUI/WxWidgets/GUI_Main_Easy_Box.cpp

GUI_Main_Easy_Box.obj: ../../../Source/GUI/WxWidgets/GUI_Main_Easy_Box.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GUI_Main_Easy_Box.obj -MD -MP -MF "$(DEPDIR)/GUI_Main_Easy_Box.Tpo" -c -o GUI_Main_Easy_Box.obj `if test -f '../../../Source/GUI/WxWidgets/GUI_Main_Easy_Box.cpp'; then $(CYGPATH_W) '../../../Source/GUI/WxWidgets/GUI_Main_Easy_Box.cpp'; else $(CYGPATH_W) '$(srcdir)/../../../Source/GUI/WxWidgets/GUI_Main_Easy_Box.cpp'; fi`; \
	then mv -f "$(DEPDIR)/GUI_Main_Easy_Box.Tpo" "$(DEPDIR)/GUI_Main_Easy_Box.Po"; else rm -f "$(DEPDIR)/GUI_Main_Easy_Box.Tpo"; exit 1; fi
#	source='../../../Source/GUI/WxWidgets/GUI_Main_Easy_Box.cpp' object='GUI_Main_Easy_Box.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GUI_Main_Easy_Box.obj `if test -f '../../../Source/GUI/WxWidgets/GUI_Main_Easy_Box.cpp'; then $(CYGPATH_W) '../../../Source/GUI/WxWidgets/GUI_Main_Easy_Box.cpp'; else $(CYGPATH_W) '$(srcdir)/../../../Source/GUI/WxWidgets/GUI_Main_Easy_Box.cpp'; fi`

GUI_Main_FileDrop.o: ../../../Source/GUI/WxWidgets/GUI_Main_FileDrop.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GUI_Main_FileDrop.o -MD -MP -MF "$(DEPDIR)/GUI_Main_FileDrop.Tpo" -c -o GUI_Main_FileDrop.o `test -f '../../../Source/GUI/WxWidgets/GUI_Main_FileDrop.cpp' || echo '$(srcdir)/'`../../../Source/GUI/WxWidgets/GUI_Main_FileDrop.cpp; \
	then mv -f "$(DEPDIR)/GUI_Main_FileDrop.Tpo" "$(DEPDIR)/GUI_Main_FileDrop.Po"; else rm -f "$(DEPDIR)/GUI_Main_FileDrop.Tpo"; exit 1; fi
#	source='../../../Source/GUI/WxWidgets/GUI_Main_FileDrop.cpp' object='GUI_Main_FileDrop.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GUI_Main_FileDrop.o `test -f '../../../Source/GUI/WxWidgets/GUI_Main_FileDrop.cpp' || echo '$(srcdir)/'`../../../Source/GUI/WxWidgets/GUI_Main_FileDrop.cpp

GUI_Main_FileDrop.obj: ../../../Source/GUI/WxWidgets/GUI_Main_FileDrop.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GUI_Main_FileDrop.obj -MD -MP -MF "$(DEPDIR)/GUI_Main_FileDrop.Tpo" -c -o GUI_Main_FileDrop.obj `if test -f '../../../Source/GUI/WxWidgets/GUI_Main_FileDrop.cpp'; then $(CYGPATH_W) '../../../Source/GUI/WxWidgets/GUI_Main_FileDrop.cpp'; else $(CYGPATH_W) '$(srcdir)/../../../Source/GUI/WxWidgets/GUI_Main_FileDrop.cpp'; fi`; \
	then mv -f "$(DEPDIR)/GUI_Main_FileDrop.Tpo" "$(DEPDIR)/GUI_Main_FileDrop.Po"; else rm -f "$(DEPDIR)/GUI_Main_FileDrop.Tpo"; exit 1; fi
#	source='../../../Source/GUI/WxWidgets/GUI_Main_FileDrop.cpp' object='GUI_Main_FileDrop.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GUI_Main_FileDrop.obj `if test -f '../../../Source/GUI/WxWidgets/GUI_Main_FileDrop.cpp'; then $(CYGPATH_W) '../../../Source/GUI/WxWidgets/GUI_Main_FileDrop.cpp'; else $(CYGPATH_W) '$(srcdir)/../../../Source/GUI/WxWidgets/GUI_Main_FileDrop.cpp'; fi`

GUI_Main_HTML.o: ../../../Source/GUI/WxWidgets/GUI_Main_HTML.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GUI_Main_HTML.o -MD -MP -MF "$(DEPDIR)/GUI_Main_HTML.Tpo" -c -o GUI_Main_HTML.o `test -f '../../../Source/GUI/WxWidgets/GUI_Main_HTML.cpp' || echo '$(srcdir)/'`../../../Source/GUI/WxWidgets/GUI_Main_HTML.cpp; \
	then mv -f "$(DEPDIR)/GUI_Main_HTML.Tpo" "$(DEPDIR)/GUI_Main_HTML.Po"; else rm -f "$(DEPDIR)/GUI_Main_HTML.Tpo"; exit 1; fi
#	source='../../../Source/GUI/WxWidgets/GUI_Main_HTML.cpp' object='GUI_Main_HTML.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GUI_Main_HTML.o `test -f '../../../Source/GUI/WxWidgets/GUI_Main_HTML.cpp' || echo '$(srcdir)/'`../../../Source/GUI/WxWidgets/GUI_Main_HTML.cpp

GUI_Main_HTML.obj: ../../../Source/GUI/WxWidgets/GUI_Main_HTML.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GUI_Main_HTML.obj -MD -MP -MF "$(DEPDIR)/GUI_Main_HTML.Tpo" -c -o GUI_Main_HTML.obj `if test -f '../../../Source/GUI/WxWidgets/GUI_Main_HTML.cpp'; then $(CYGPATH_W) '../../../Source/GUI/WxWidgets/GUI_Main_HTML.cpp'; else $(CYGPATH_W) '$(srcdir)/../../../Source/GUI/WxWidgets/GUI_Main_HTML.cpp'; fi`; \
	then mv -f "$(DEPDIR)/GUI_Main_HTML.Tpo" "$(DEPDIR)/GUI_Main_HTML.Po"; else rm -f "$(DEPDIR)/GUI_Main_HTML.Tpo"; exit 1; fi
#	source='../../../Source/GUI/WxWidgets/GUI_Main_HTML.cpp' object='GUI_Main_HTML.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GUI_Main_HTML.obj `if test -f '../../../Source/GUI/WxWidgets/GUI_Main_HTML.cpp'; then $(CYGPATH_W) '../../../Source/GUI/WxWidgets/GUI_Main_HTML.cpp'; else $(CYGPATH_W) '$(srcdir)/../../../Source/GUI/WxWidgets/GUI_Main_HTML.cpp'; fi`

GUI_Main_Menu.o: ../../../Source/GUI/WxWidgets/GUI_Main_Menu.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GUI_Main_Menu.o -MD -MP -MF "$(DEPDIR)/GUI_Main_Menu.Tpo" -c -o GUI_Main_Menu.o `test -f '../../../Source/GUI/WxWidgets/GUI_Main_Menu.cpp' || echo '$(srcdir)/'`../../../Source/GUI/WxWidgets/GUI_Main_Menu.cpp; \
	then mv -f "$(DEPDIR)/GUI_Main_Menu.Tpo" "$(DEPDIR)/GUI_Main_Menu.Po"; else rm -f "$(DEPDIR)/GUI_Main_Menu.Tpo"; exit 1; fi
#	source='../../../Source/GUI/WxWidgets/GUI_Main_Menu.cpp' object='GUI_Main_Menu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GUI_Main_Menu.o `test -f '../../../Source/GUI/WxWidgets/GUI_Main_Menu.cpp' || echo '$(srcdir)/'`../../../Source/GUI/WxWidgets/GUI_Main_Menu.cpp

GUI_Main_Menu.obj: ../../../Source/GUI/WxWidgets/GUI_Main_Menu.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GUI_Main_Menu.obj -MD -MP -MF "$(DEPDIR)/GUI_Main_Menu.Tpo" -c -o GUI_Main_Menu.obj `if test -f '../../../Source/GUI/WxWidgets/GUI_Main_Menu.cpp'; then $(CYGPATH_W) '../../../Source/GUI/WxWidgets/GUI_Main_Menu.cpp'; else $(CYGPATH_W) '$(srcdir)/../../../Source/GUI/WxWidgets/GUI_Main_Menu.cpp'; fi`; \
	then mv -f "$(DEPDIR)/GUI_Main_Menu.Tpo" "$(DEPDIR)/GUI_Main_Menu.Po"; else rm -f "$(DEPDIR)/GUI_Main_Menu.Tpo"; exit 1; fi
#	source='../../../Source/GUI/WxWidgets/GUI_Main_Menu.cpp' object='GUI_Main_Menu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GUI_Main_Menu.obj `if test -f '../../../Source/GUI/WxWidgets/GUI_Main_Menu.cpp'; then $(CYGPATH_W) '../../../Source/GUI/WxWidgets/GUI_Main_Menu.cpp'; else $(CYGPATH_W) '$(srcdir)/../../../Source/GUI/WxWidgets/GUI_Main_Menu.cpp'; fi`

GUI_Main_Sheet.o: ../../../Source/GUI/WxWidgets/GUI_Main_Sheet.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GUI_Main_Sheet.o -MD -MP -MF "$(DEPDIR)/GUI_Main_Sheet.Tpo" -c -o GUI_Main_Sheet.o `test -f '../../../Source/GUI/WxWidgets/GUI_Main_Sheet.cpp' || echo '$(srcdir)/'`../../../Source/GUI/WxWidgets/GUI_Main_Sheet.cpp; \
	then mv -f "$(DEPDIR)/GUI_Main_Sheet.Tpo" "$(DEPDIR)/GUI_Main_Sheet.Po"; else rm -f "$(DEPDIR)/GUI_Main_Sheet.Tpo"; exit 1; fi
#	source='../../../Source/GUI/WxWidgets/GUI_Main_Sheet.cpp' object='GUI_Main_Sheet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GUI_Main_Sheet.o `test -f '../../../Source/GUI/WxWidgets/GUI_Main_Sheet.cpp' || echo '$(srcdir)/'`../../../Source/GUI/WxWidgets/GUI_Main_Sheet.cpp

GUI_Main_Sheet.obj: ../../../Source/GUI/WxWidgets/GUI_Main_Sheet.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GUI_Main_Sheet.obj -MD -MP -MF "$(DEPDIR)/GUI_Main_Sheet.Tpo" -c -o GUI_Main_Sheet.obj `if test -f '../../../Source/GUI/WxWidgets/GUI_Main_Sheet.cpp'; then $(CYGPATH_W) '../../../Source/GUI/WxWidgets/GUI_Main_Sheet.cpp'; else $(CYGPATH_W) '$(srcdir)/../../../Source/GUI/WxWidgets/GUI_Main_Sheet.cpp'; fi`; \
	then mv -f "$(DEPDIR)/GUI_Main_Sheet.Tpo" "$(DEPDIR)/GUI_Main_Sheet.Po"; else rm -f "$(DEPDIR)/GUI_Main_Sheet.Tpo"; exit 1; fi
#	source='../../../Source/GUI/WxWidgets/GUI_Main_Sheet.cpp' object='GUI_Main_Sheet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GUI_Main_Sheet.obj `if test -f '../../../Source/GUI/WxWidgets/GUI_Main_Sheet.cpp'; then $(CYGPATH_W) '../../../Source/GUI/WxWidgets/GUI_Main_Sheet.cpp'; else $(CYGPATH_W) '$(srcdir)/../../../Source/GUI/WxWidgets/GUI_Main_Sheet.cpp'; fi`

GUI_Main_Text.o: ../../../Source/GUI/WxWidgets/GUI_Main_Text.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GUI_Main_Text.o -MD -MP -MF "$(DEPDIR)/GUI_Main_Text.Tpo" -c -o GUI_Main_Text.o `test -f '../../../Source/GUI/WxWidgets/GUI_Main_Text.cpp' || echo '$(srcdir)/'`../../../Source/GUI/WxWidgets/GUI_Main_Text.cpp; \
	then mv -f "$(DEPDIR)/GUI_Main_Text.Tpo" "$(DEPDIR)/GUI_Main_Text.Po"; else rm -f "$(DEPDIR)/GUI_Main_Text.Tpo"; exit 1; fi
#	source='../../../Source/GUI/WxWidgets/GUI_Main_Text.cpp' object='GUI_Main_Text.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GUI_Main_Text.o `test -f '../../../Source/GUI/WxWidgets/GUI_Main_Text.cpp' || echo '$(srcdir)/'`../../../Source/GUI/WxWidgets/GUI_Main_Text.cpp

GUI_Main_Text.obj: ../../../Source/GUI/WxWidgets/GUI_Main_Text.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GUI_Main_Text.obj -MD -MP -MF "$(DEPDIR)/GUI_Main_Text.Tpo" -c -o GUI_Main_Text.obj `if test -f '../../../Source/GUI/WxWidgets/GUI_Main_Text.cpp'; then $(CYGPATH_W) '../../../Source/GUI/WxWidgets/GUI_Main_Text.cpp'; else $(CYGPATH_W) '$(srcdir)/../../../Source/GUI/WxWidgets/GUI_Main_Text.cpp'; fi`; \
	then mv -f "$(DEPDIR)/GUI_Main_Text.Tpo" "$(DEPDIR)/GUI_Main_Text.Po"; else rm -f "$(DEPDIR)/GUI_Main_Text.Tpo"; exit 1; fi
#	source='../../../Source/GUI/WxWidgets/GUI_Main_Text.cpp' object='GUI_Main_Text.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GUI_Main_Text.obj `if test -f '../../../Source/GUI/WxWidgets/GUI_Main_Text.cpp'; then $(CYGPATH_W) '../../../Source/GUI/WxWidgets/GUI_Main_Text.cpp'; else $(CYGPATH_W) '$(srcdir)/../../../Source/GUI/WxWidgets/GUI_Main_Text.cpp'; fi`

GUI_Main_Tree.o: ../../../Source/GUI/WxWidgets/GUI_Main_Tree.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GUI_Main_Tree.o -MD -MP -MF "$(DEPDIR)/GUI_Main_Tree.Tpo" -c -o GUI_Main_Tree.o `test -f '../../../Source/GUI/WxWidgets/GUI_Main_Tree.cpp' || echo '$(srcdir)/'`../../../Source/GUI/WxWidgets/GUI_Main_Tree.cpp; \
	then mv -f "$(DEPDIR)/GUI_Main_Tree.Tpo" "$(DEPDIR)/GUI_Main_Tree.Po"; else rm -f "$(DEPDIR)/GUI_Main_Tree.Tpo"; exit 1; fi
#	source='../../../Source/GUI/WxWidgets/GUI_Main_Tree.cpp' object='GUI_Main_Tree.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GUI_Main_Tree.o `test -f '../../../Source/GUI/WxWidgets/GUI_Main_Tree.cpp' || echo '$(srcdir)/'`../../../Source/GUI/WxWidgets/GUI_Main_Tree.cpp

GUI_Main_Tree.obj: ../../../Source/GUI/WxWidgets/GUI_Main_Tree.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GUI_Main_Tree.obj -MD -MP -MF "$(DEPDIR)/GUI_Main_Tree.Tpo" -c -o GUI_Main_Tree.obj `if test -f '../../../Source/GUI/WxWidgets/GUI_Main_Tree.cpp'; then $(CYGPATH_W) '../../../Source/GUI/WxWidgets/GUI_Main_Tree.cpp'; else $(CYGPATH_W) '$(srcdir)/../../../Source/GUI/WxWidgets/GUI_Main_Tree.cpp'; fi`; \
	then mv -f "$(DEPDIR)/GUI_Main_Tree.Tpo" "$(DEPDIR)/GUI_Main_Tree.Po"; else rm -f "$(DEPDIR)/GUI_Main_Tree.Tpo"; exit 1; fi
#	source='../../../Source/GUI/WxWidgets/GUI_Main_Tree.cpp' object='GUI_Main_Tree.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GUI_Main_Tree.obj `if test -f '../../../Source/GUI/WxWidgets/GUI_Main_Tree.cpp'; then $(CYGPATH_W) '../../../Source/GUI/WxWidgets/GUI_Main_Tree.cpp'; else $(CYGPATH_W) '$(srcdir)/../../../Source/GUI/WxWidgets/GUI_Main_Tree.cpp'; fi`

CommandLine_Parser.o: ../../../Source/CLI/CommandLine_Parser.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CommandLine_Parser.o -MD -MP -MF "$(DEPDIR)/CommandLine_Parser.Tpo" -c -o CommandLine_Parser.o `test -f '../../../Source/CLI/CommandLine_Parser.cpp' || echo '$(srcdir)/'`../../../Source/CLI/CommandLine_Parser.cpp; \
	then mv -f "$(DEPDIR)/CommandLine_Parser.Tpo" "$(DEPDIR)/CommandLine_Parser.Po"; else rm -f "$(DEPDIR)/CommandLine_Parser.Tpo"; exit 1; fi
#	source='../../../Source/CLI/CommandLine_Parser.cpp' object='CommandLine_Parser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CommandLine_Parser.o `test -f '../../../Source/CLI/CommandLine_Parser.cpp' || echo '$(srcdir)/'`../../../Source/CLI/CommandLine_Parser.cpp

CommandLine_Parser.obj: ../../../Source/CLI/CommandLine_Parser.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CommandLine_Parser.obj -MD -MP -MF "$(DEPDIR)/CommandLine_Parser.Tpo" -c -o CommandLine_Parser.obj `if test -f '../../../Source/CLI/CommandLine_Parser.cpp'; then $(CYGPATH_W) '../../../Source/CLI/CommandLine_Parser.cpp'; else $(CYGPATH_W) '$(srcdir)/../../../Source/CLI/CommandLine_Parser.cpp'; fi`; \
	then mv -f "$(DEPDIR)/CommandLine_Parser.Tpo" "$(DEPDIR)/CommandLine_Parser.Po"; else rm -f "$(DEPDIR)/CommandLine_Parser.Tpo"; exit 1; fi
#	source='../../../Source/CLI/CommandLine_Parser.cpp' object='CommandLine_Parser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CommandLine_Parser.obj `if test -f '../../../Source/CLI/CommandLine_Parser.cpp'; then $(CYGPATH_W) '../../../Source/CLI/CommandLine_Parser.cpp'; else $(CYGPATH_W) '$(srcdir)/../../../Source/CLI/CommandLine_Parser.cpp'; fi`

Help.o: ../../../Source/CLI/Help.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Help.o -MD -MP -MF "$(DEPDIR)/Help.Tpo" -c -o Help.o `test -f '../../../Source/CLI/Help.cpp' || echo '$(srcdir)/'`../../../Source/CLI/Help.cpp; \
	then mv -f "$(DEPDIR)/Help.Tpo" "$(DEPDIR)/Help.Po"; else rm -f "$(DEPDIR)/Help.Tpo"; exit 1; fi
#	source='../../../Source/CLI/Help.cpp' object='Help.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Help.o `test -f '../../../Source/CLI/Help.cpp' || echo '$(srcdir)/'`../../../Source/CLI/Help.cpp

Help.obj: ../../../Source/CLI/Help.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Help.obj -MD -MP -MF "$(DEPDIR)/Help.Tpo" -c -o Help.obj `if test -f '../../../Source/CLI/Help.cpp'; then $(CYGPATH_W) '../../../Source/CLI/Help.cpp'; else $(CYGPATH_W) '$(srcdir)/../../../Source/CLI/Help.cpp'; fi`; \
	then mv -f "$(DEPDIR)/Help.Tpo" "$(DEPDIR)/Help.Po"; else rm -f "$(DEPDIR)/Help.Tpo"; exit 1; fi
#	source='../../../Source/CLI/Help.cpp' object='Help.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Help.obj `if test -f '../../../Source/CLI/Help.cpp'; then $(CYGPATH_W) '../../../Source/CLI/Help.cpp'; else $(CYGPATH_W) '$(srcdir)/../../../Source/CLI/Help.cpp'; fi`

Core.o: ../../../Source/Common/Core.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Core.o -MD -MP -MF "$(DEPDIR)/Core.Tpo" -c -o Core.o `test -f '../../../Source/Common/Core.cpp' || echo '$(srcdir)/'`../../../Source/Common/Core.cpp; \
	then mv -f "$(DEPDIR)/Core.Tpo" "$(DEPDIR)/Core.Po"; else rm -f "$(DEPDIR)/Core.Tpo"; exit 1; fi
#	source='../../../Source/Common/Core.cpp' object='Core.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Core.o `test -f '../../../Source/Common/Core.cpp' || echo '$(srcdir)/'`../../../Source/Common/Core.cpp

Core.obj: ../../../Source/Common/Core.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Core.obj -MD -MP -MF "$(DEPDIR)/Core.Tpo" -c -o Core.obj `if test -f '../../../Source/Common/Core.cpp'; then $(CYGPATH_W) '../../../Source/Common/Core.cpp'; else $(CYGPATH_W) '$(srcdir)/../../../Source/Common/Core.cpp'; fi`; \
	then mv -f "$(DEPDIR)/Core.Tpo" "$(DEPDIR)/Core.Po"; else rm -f "$(DEPDIR)/Core.Tpo"; exit 1; fi
#	source='../../../Source/Common/Core.cpp' object='Core.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Core.obj `if test -f '../../../Source/Common/Core.cpp'; then $(CYGPATH_W) '../../../Source/Common/Core.cpp'; else $(CYGPATH_W) '$(srcdir)/../../../Source/Common/Core.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(am__remove_distdir)
	mkdir $(distdir)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	-find $(distdir) -type d ! -perm -755 -exec chmod a+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(SHELL) $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r $(distdir)
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bunzip2 -c $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && cd $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e '1{h;s/./=/g;p;x;}' -e '$${p;x;}'
distuninstallcheck:
	@cd $(distuninstallcheck_dir) \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am am--refresh check check-am clean \
	clean-binPROGRAMS clean-generic clean-libtool ctags dist \
	dist-all dist-bzip2 dist-gzip dist-shar dist-tarZ dist-zip \
	distcheck distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
