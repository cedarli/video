#!/bin/sh
#
# Bootstrap development of mpeg4ip with GNU autoconf, automake, and libtool
# Assumes tools are available on the system
#

MPEG4IP_SRC=`dirname $0`
echo dir: $MPEG4IP_SRC

# Check that we can find libtool
# Frequently it hasn't been installed
if glibtool --version > /dev/null 2> /dev/null
    then 
    libtool=glibtool
    if libtoolize --version > /dev/null
	then
	echo "Found link for libtoolize"
    else 
	echo "Need a link for libtoolize to glibtoolize"
	echo "Please see readme for how to make on OS X"
	exit 1
    fi
elif libtool --version >/dev/null
    then libtool=libtool
else echo "libtool does not appear to be installed."
    echo "Please install it and then rerun this script."
    exit 1
fi

if (test ! -f "$MPEG4IP_SRC/configure") 
    then echo "Please run cvs_bootstrap instead."
    echo "Please note that you will need autoconf, automake and libtool"
    echo "of the correct version as specified in the README"
    exit 1
fi

target_system=`uname -s`
if sdl-config --version >/dev/null 2>/dev/null
    then
    echo "SDL appears to be installed"
else
    echo "SDL does not appear to be installed - install the SDL development package"
    echo "You must have sdl-config in your path to continue"
    exit 1
fi

allargs="$@"
#
# Test for faac and possible error
#
if test $target_system = "Linux"; then
    have_faac=no
    if which faac >/dev/null 2>/dev/null; then
	have_faac=yes
    fi

    if test $have_faac = "yes"; then
	# we have lame and faac - see if faac is built with mp4 support
	faac --help >&faac_help
	sdf=`grep "MP4 support unavailable" faac_help`
	rm -f faac_help
	if test -z "$sdf"; then
	    if which mpeg4ip-config >/dev/null 2>/dev/null; then
		echo "Warning - faac uses libmp4v, but we've detected a version"
		echo "of mpeg4ip.  If you get errors building mp4live, please"
		echo "rebuild faac without mp4v2 support"
	    else
		echo "Error - we have detected a version of faac that has libmp4v2 support"
		echo "and no copy of mpeg4ip-config.  This means faac was built with"
		echo "faad2 and the libraries will be incompatible".
		echo "Please reinstall faac without mp4v2 support"
		exit 1
	    fi
	fi
    fi
fi
set -x

# if src tree is created via cvs export to tar.gz
# then empty directories in the repository are pruned
# this code recreates the empty directories
# if src tree is checked out directly via cvs, this is a no-op
mkdir -p $MPEG4IP_SRC/config || exit 1
echo "Do not remove this file or you might have to re-bootstrap" > bootstrapped
$MPEG4IP_SRC/configure $allargs || exit 1
set +x

if test $target_system = "Linux"; then
   disabled_mp4live=no
   while test $# -gt 0;
     do
     if test $1 = "--disable-server"; then
        disabled_mp4live=yes
     else
        if test $1 = "--disable-mp4live"; then
           disabled_mp4live=yes
        fi
     fi
     shift
   done
   if test $disabled_mp4live = no; then
       sh $MPEG4IP_SRC/mp4live_encoder_check.sh
   fi

fi
# Now ready to run make
echo
echo "ready to make"
